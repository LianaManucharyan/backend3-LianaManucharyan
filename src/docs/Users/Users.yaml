openapi: 3.0.0
info:
  title: Users API
  version: 1.0.0
  description: Endpoints for managing users.

tags:
  - name: Users
    description: Operations related to users

paths:
  /api/users:
    get:
      tags:
        - Users
      summary: Get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

  /api/users/{uid}:
    get:
      tags:
        - Users
      summary: Get a user by ID
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: User not found

    put:
      tags:
        - Users
      summary: Update a user by ID
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User updated
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: User not found

    delete:
      tags:
        - Users
      summary: Delete a user by ID
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User deleted

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "123456"
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "john@example.com"
        role:
          type: string
          example: "user"

    UserUpdate:
      type: object
      properties:
        name:
          type: string
          example: "Jane Doe"
        email:
          type: string
          example: "jane@example.com"
        role:
          type: string
          example: "admin"